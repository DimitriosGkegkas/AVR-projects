; ----???? tµ?µat?? ded?µ???? 
.
#include "m16def.inc"

.DSEG
_tmp_:.byte 2
.CSEG

.org 0x0
rjmp reset

reset:

ldi r24 ,(1 << PC7) | (1 << PC6) | (1 << PC5) | (1 << PC4) ; ??te? ?? e??d??? ta 4 msb
out DDRC ,r24 ; t?? ???a? PORTC
ser r24
out DDRB, r24
ldi	r16,LOW(RAMEND)		; load low byte of RAMEND into r16
	out	SPL,r16			; store r16 in stack pointer low
	ldi	r16,HIGH(RAMEND)	; load high byte of RAMEND into r16
	out	SPH,r16		



main:
	ldi r24,0x0F
	rcall scan_keypad_rising_edge
	cpi r24, 0x00
	brne FButton_press
	cpi r25,0x00
	breq main
	 
FButton_press:
	cpi r24, 0x02
	brne notMyPin
	cpi r25, 0x00
	breq myPin
	
notMyPin:
	ldi r24,0x0F
	rcall scan_keypad_rising_edge
	cpi r24, 0x00
	brne blingLeds
	cpi r25,0x00
	breq notMyPin
	rjmp blingLeds

myPin:
	ldi r24,0x0F
	rcall scan_keypad_rising_edge
	cpi r24, 0x00
	brne SButtonPress
	cpi r25,0x00
	breq myPin
SButtonPress:
	cpi r24, 0x00
	brne blingLeds
	cpi r25, 0x10
	breq openLeds
blingLeds:
	ldi r22, 0x08
loop:
	dec r22
	ser r24
	out PORTB,r24
	ldi r24,low(250)
	ldi r25,high(250)
	rcall wait_msec 
	clr r24
	out PORTB,r24
	ldi r24,low(250)
	ldi r25,high(250)
	rcall wait_msec 
	cpi r22,0x00
	brne loop
	rjmp main
	

openLeds:
	ser r24
	out PORTB,r24
	ldi r24,low(4000)
	ldi r25,high(4000)
	rcall wait_msec 
	clr r24
	out PORTB,r24
	rjmp main





















scan_row:
ldi r25 , 0x08; a?????p???s? µe ‘0000 1000’
back_:
lsl r25			; a??ste?? ???s??s? t?? ‘1’ t?se? ??se??
dec r24			; ?s?? e??a? ? a???µ?? t?? ??aµµ??
brne back_
out PORTC, r25 ; ? a?t?st???? ??aµµ? t??eta? st? ?????? ‘1’
nop
nop				; ?a??st???s? ??a ?a p????ίe? ?a ???e? ? a??a?? ?at?stas??
in r24 , PINC	; ep?st??f??? ?? ??se?? (st??e?) t?? d?a??pt?? p?? e??a? p?esµ????
andi r24 ,0x0F	; ap?µ??????ta? ta 4 LSB ?p?? ta ‘1’ de?????? p?? e??a? pat?µ???? 
ret


wait_msec:
push r24 ; 
push r25 ; 
ldi r24 , low(998) 
ldi r25 , high(998) ; 1 ?????? (0.125 µsec)
rcall wait_usec ; 3 ?????? (0.375 µsec), p???a?e? s??????? ?a??st???s? 998.375 µsec
pop r25 ; 2 ?????? (0.250 µsec)
pop r24 ; 2 ??????
sbiw r24 , 1 ; 2 ??????
brne wait_msec ; 1 ? 2 ?????? (0.125 ? 0.250 µsec)
ret ; 4 ?????? (0.500 µsec)


wait_usec:
sbiw r24 ,1 ; 2 ?????? (0.250 µsec)
nop ; 1 ?????? (0.125 µsec)
nop ; 1 ?????? (0.125 µsec)
nop ; 1 ?????? (0.125 µsec)
nop ; 1 ?????? (0.125 µsec)
brne wait_usec ; 1 ? 2 ?????? (0.125 ? 0.250 µsec)
ret ; 4 ?????? (0.500 µsec)


scan_keypad:

ldi r24 , 0x01 ; έλεγξε την πρώτη γραμμή του πληκτρολογίου
rcall scan_row
swap r24 ; αποθήκευσε το αποτέλεσμα
mov r27 , r24 ; στα 4 msb του r27

ldi r24 ,0x02 ; έλεγξε τη δεύτερη γραμμή του πληκτρολογίου
rcall scan_row
add r27 , r24 ; αποθήκευσε το αποτέλεσμα στα 4 lsb του r27

ldi r24 , 0x03 ; έλεγξε την τρίτη γραμμή του πληκτρολογίου
rcall scan_row
swap r24 ; αποθήκευσε το αποτέλεσμα
mov r26 , r24 ; στα 4 msb του r26

ldi r24 ,0x04 ; έλεγξε την τέταρτη γραμμή του πληκτρολογίου
rcall scan_row
add r26 , r24 ; αποθήκευσε το αποτέλεσμα στα 4 lsb του r26
movw r24 , r26 ; μετέφερε το αποτέλεσμα στους καταχωρητές r25:r24
ret

scan_keypad_rising_edge:
mov r22 ,r24 		; ap????e?se t? ????? sp??????sµ?? st?? r22
rcall scan_keypad ; ??e??e t? p???t??????? ??a p?esµ????? d?a??pte?
push r24			 ; ?a? ap????e?se t? ap?t??esµa
push r25
mov r24 ,r22 		; ?a??st???se r22 ms (t?p???? t?µ?? 10-20 msec p?? ?a?????eta? ap? t??
ldi r25 ,0			 ; ?atas?e?ast? t?? p???t???????? – ?????d????e?a sp??????sµ??)
rcall wait_msec
rcall scan_keypad 	; ??e??e t? p???t??????? ?a?? ?a? ap?????e
pop r23 			; ?sa p???t?a eµfa?????? sp??????sµ?
pop r22
and r24 ,r22
and r25 ,r23
ldi r26 ,low(_tmp_) ; f??t?se t?? ?at?stas? t?? d?a??pt?? st??
ldi r27 ,high(_tmp_) ; p??????µe?? ???s? t?? ???t??a? st??? r27:r26
ld r23 ,X+
ld r22 ,X
st X ,r24 			; ap????e?se st? RAM t? ??a ?at?stas?
st -X ,r25			 ; t?? d?a??pt??
com r23
com r22 			; ί?e? t??? d?a??pte? p?? ????? «µ????» pat??e?
and r24 ,r22
and r25 ,r23
ret
